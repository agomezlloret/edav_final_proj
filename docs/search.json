[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NYC Marathon 2024 Analysis",
    "section": "",
    "text": "1 Introduction\n\nExperiencing the 2024 New York City Marathon for the first time was a transformative moment for us. The energy coursing through the city streets was palpable—crowds cheered, competitors pushed themselves to the limit, and the shared emotion between runners and spectators created a unique, unforgettable atmosphere. In a city often defined by its fast pace and individualism, this event stood out as a rare moment of unity. It felt as though the entire city had come together for a day to celebrate determination, perseverance, and community spirit. This experience underscored for us that the marathon is more than just a race; it is a powerful symbol of collective ambition and support.\nThis newfound appreciation inspired us into thinking that maybe we could run the race next! To prepare for this journey, we wanted to delve deeper into the data from the 2024 race. Analyzing this dataset offers us insights not only for our training strategy but also to better understand the dynamics of marathon running. By studying various aspects of the race, we aim to uncover trends that can guide our preparation and shed light on what it truly takes to participate in such a remarkable event.\nOur project focuses on answering several key questions that we believe will be both interesting and informative:\n\nHow do women’s finish times compare to men’s finish times? We want to identify whether there is an age range where female times are comparable or even superior to male times.\nWhat is the most common finish time for women in their 20s and 30s? By finding this ‘average’ time, we hope to set realistic goals for ourselves and understand typical performance benchmarks.\nWhich country, apart from the United States, had the highest representation? Furthermore, we seek to explore which non-U.S. country performed best in terms of average finish times.\nHow many participants over the age of 60 completed the marathon, and what was the distribution of their finish times? This analysis will provide insight into the capabilities and dedication of older runners, showcasing the marathon’s inclusivity across age groups.\n\nOur aim is to provide readers with an engaging overview of the 2024 NYC Marathon through data-driven insights that highlight its diversity, competitiveness, and spirit. Whether you are a running enthusiast, a data analyst, or someone inspired by community events, this exploration seeks to share the compelling stories hidden within the race statistics.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Description",
    "section": "",
    "text": "2.1 Missing value analysis",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Description</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Description",
    "section": "",
    "text": "2.1.1 Exploring missing values\n\n\nCode\ndata &lt;- read.csv(\"NYC Marathon Results, 2024 - Marathon Runner Results.csv\")\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\n\nCode\ndata &lt;- data |&gt;\n  mutate(across(where(is.character), ~ na_if(., \"-\"))) |&gt;\n  mutate(across(where(is.character), ~ ifelse(. == \"\", NA, .)))\n\ndata &lt;- data |&gt;\n  mutate(across(where(is.integer), ~ na_if(., -1)))\n\n# Drop IAAF Column\nmarathon_data &lt;- data[,-9]\n\ncolSums(is.na(marathon_data))\n\n\n       runnerId       firstName             bib             age          gender \n              0               0              12               0              12 \n           city     countryCode   stateProvince    overallPlace     overallTime \n             62              12             308               0               0 \n           pace     genderPlace    ageGradeTime   ageGradePlace ageGradePercent \n              0               0               0               0               0 \n     racesCount \n              0 \n\n\nFirst, we decided to drop the ‘IAAF’ column which denoted a runner’s international goverenming athletics body as it was mostly redundant with the country trigraph column and overall does not provide necessary insight into the dataset.\nLooking at the original dataset, we observed that some columns contained blank entries, NA values, and “-” placeholders. To address this, we decided to transform the dataset by replacing blanks and “-” with NA. After this transformation, we found that 308 NA values remained in the ‘stateProvince’ column, 12 remained in the ‘countryCode’, 12 in ‘bib’, 12 in ‘gender’, and 62 in ‘city’. Initially, we speculated that the missing values in ‘stateProvince’ might be due to certain countries not having a ‘stateProvince’ field for competitors to fill in. However, upon further investigation, we filtered for missing values in the ‘stateProvince’ column and identified distinct ‘countryCode’ values. This revealed that the USA also had missing entries, suggesting that some competitors chose not to provide a ‘stateProvince’ value.\n\n\nCode\nunique_country_codes &lt;- marathon_data |&gt;\n  filter(is.na(stateProvince)) |&gt;\n  count(countryCode)\n\nunique_country_codes$countryCode[is.na(unique_country_codes$countryCode)] &lt;- \"Unknown\"\n\nunique_country_codes &lt;- unique_country_codes |&gt;\n  mutate(countryCode = reorder(countryCode, n))\n\nggplot(unique_country_codes, aes(x = n, y = countryCode)) +\n  geom_bar(stat = \"identity\", fill = \"lightpink\") +\n  geom_text(aes(label=n), vjust = .5, hjust = 0, color = 'darkblue') +\n  labs(title = \"Missing stateProvince Values by Country\",\n       x = \"Missing Values\",\n       y = \"Country Code\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nIn order to correctly sort the instances of missing values per country code, we needed to rename the missing country code values from NA to “Unknown” so that ggplot would recognize it and include it in the ordering. Somewhat surprising is the fact that USA is in the upper quartile of missing values, considering that every participating US runner has an associated state that they could have included in their registration.\n\n\nCode\nlibrary(ggcorrplot)\n\nmissing_matrix &lt;- is.na(marathon_data)\n\n# Compute the correlation matrix of missingness\nmissing_corr &lt;- cor(missing_matrix, use = \"pairwise.complete.obs\")\n\n# Plot the correlation matrix\nggcorrplot(missing_corr, title = \"Correlation of Missing Data\", lab = TRUE)\n\n\n\n\n\n\n\n\n\nPlotting a correlation heat map helps us identify if missing values in one column is correlated with missing values in another column. From this plot, we see that ‘countryCode’, ‘bib’, and ‘gender’ have a strong correlation which tells us that these values always have missing values simultaneously. ‘City’, ‘countryCode’, ‘bib’, and ‘gender’ have moderate correlations across each column which could suggest that if a value is missing in one of the 3 columns, then there’s a higher chance that ‘city’ is missing a value as well for that entry.\n\n\nCode\n# Filter rows where \"city\" is missing\ncity_na_rows &lt;- marathon_data |&gt;\n  filter(is.na(city))\n\n# Count occurrences of countryCode in rows with missing city\ncountry_counts_city_na &lt;- city_na_rows |&gt;\n  count(countryCode, sort = TRUE)\n\n#country_counts_city_na\n\n\n\n\nCode\ncountry_counts_city_na &lt;- country_counts_city_na |&gt;\n  mutate(proportion_missing = n / sum(n))\n\ncountry_counts_full &lt;- marathon_data |&gt;\n  count(countryCode, sort = TRUE) |&gt;\n  mutate(proportion_full = n / sum(n))\n\ncountry_comparison_city_na &lt;- country_counts_city_na |&gt;\n  left_join(country_counts_full, by = \"countryCode\", suffix = c(\"_missing\", \"_full\"))\n\n# View the comparison\n#country_comparison_city_na\n\n\n\n\nCode\nggplot(country_comparison_city_na, aes(x = reorder(countryCode, proportion_missing), y = proportion_missing)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.6) +\n  geom_point(aes(y = proportion_full), color = \"red\", size = 3) +\n  coord_flip() +\n  labs(title = \"Proportion of Missing `city` by Country\",\n       x = \"Country Code\",\n       y = \"Proportion\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nIn this bar plot, we’re comparing the proportions of ‘countryCode’ values in rows with missing ‘city’ versus the entire marathon dataset. The goal is to identify whether the rows with missing ‘city’ values are disproportionately associated with certain countries.\nBlue bars represent the proportion of rows with missing ‘city’ values for each ‘countryCode’. The red dots show the proportion of rows for each ‘countryCode’ in the entire dataset (to include rows where ‘city’ is not missing a value).\nThe blue bars highlight the countries contributing to rows with missing ‘city’ values with the red dots providing a baseline to compare whether a country is over represented or underrepresented in rows with missing ‘city’ values compared to their overall representation with the dataset.\nFrom this, we can see that the USA makes up around 70% of the total dataset meaning most runners are from the US. Even with this large percentage of runners, only about 2% of the rows with missing ‘city’ values are associated with the US. This could indicate that the data collection process for US participants is more robust than for international participants. It could also represent a systemic issue where missing city values disproportionately occur for non-USA participants.\nCountries like ITA, MEX, and NLD seem to be highly affected by missing ’city ’values.\n\n\n2.1.2 Dealing with missing values\nThis dataset does not provide a solid opportunity to deal with the missing values by imputing them. Looking at ‘stateProvince’ and ‘countryCode’, imputing with mode would potentially lead to wrong analysis and the other columns don’t provide context that could help with determining the best state or country to insert. In this vein, we decided to mostly leave the missing data as-is and work on a case-by-case basis.\n‘stateProvince’ has the largest percentage of missing values out of all the columns, but we want to fill in what we can for the USA participants in order to facilitate further analysis on USA-based runners.\nOut of the rows that had USA listed as the ‘countryCode’ and were missing ‘city’ or ‘stateProvince’, we noticed two rows that listed Dallas and New York under cities so we were able to impute the ‘stateProvince’ value for those 2 rows.\n\n\nCode\n#Filtering for missing values where country is USA and either city or stateProvince are missing\nusa_missing_values &lt;- marathon_data |&gt;\n  filter(countryCode == \"USA\" & (is.na(city) | is.na(stateProvince)))\n\nmarathon_data &lt;- marathon_data |&gt;\n  mutate(stateProvince = case_when(\n    city == \"Austin\" & is.na(stateProvince) ~ \"TX\",\n    city == \"New York\" & is.na(stateProvince) ~ \"NY\",\n    TRUE ~ stateProvince\n  ))\n\nusa_missing_values &lt;- marathon_data |&gt;\n  filter(countryCode == \"USA\" & (is.na(city) | is.na(stateProvince)))\n\n\n\n\nCode\nmarathon_data_clean &lt;- marathon_data |&gt;\n  filter(!(is.na(countryCode) & age == 0 & is.na(gender) & firstName == \"Anonymous\"))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Description</span>"
    ]
  },
  {
    "objectID": "data.html#summary",
    "href": "data.html#summary",
    "title": "2  Description",
    "section": "3.1 Summary",
    "text": "3.1 Summary\nOverall, the missing values from this dataset could be explained for a few plausible reasons:\n\nErrors in transferring from paper to digital data entry for registrants that filled out paper forms. With USA’s domination of online systems, this could explain the low percentage of missing values.\nTechnical issues or runner actions such as discarding the bib during the race due to it causing discomfort could result in bib and other associated data like countryCode and city to be flagged as missing.\n\nAs we continue analysis, we will make decisions on how to represent the missing the data for each question we want to answer.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Description</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Can I check your I.D.?\nCode\nggplot(marathon_data_clean, aes(x = age)) +\n  geom_histogram(binwidth = 5, bins = 30, boundary=0, fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Age Distribution of Marathon Participants\",\n       x = \"Age\",\n       y = \"Participant Count\") +\n  scale_x_continuous(breaks = seq(0, 95, by = 5)) +\n  theme_minimal()\nObservations: The distribution of participant ages is right-skewed with participants as old as 88. Most of the runners fall between 25 and 40 with a majority being between 25 and 30 years old. Median age is 43.6 years.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#young-women-leading-the-pack-for-the-future",
    "href": "results.html#young-women-leading-the-pack-for-the-future",
    "title": "3  Results",
    "section": "3.2 Young Women Leading the Pack for the Future",
    "text": "3.2 Young Women Leading the Pack for the Future\n\n\nCode\ngender_clean &lt;- marathon_data_clean |&gt;\n  filter(gender %in% c(\"M\", \"W\"))\n\ngender_clean &lt;- gender_clean |&gt;\n  mutate(age_group = case_when(\n    age &lt; 18 ~ \"17 and under\",\n    age &gt;= 18 & age &lt;= 29 ~ \"18-29\",\n    age &gt;= 30 & age &lt;= 39 ~ \"30-39\",\n    age &gt;= 40 & age &lt;= 49 ~ \"40-49\",\n    age &gt;= 50 & age &lt;= 59 ~ \"50-59\",\n    age &gt;= 60 ~ \"60+\",\n    TRUE ~ \"Unknown\"\n  ))\n\ngender_age_percentages &lt;- gender_clean |&gt;\n  group_by(age_group, gender) |&gt;\n  summarise(count = n(), .groups = 'drop') |&gt;\n  group_by(age_group) |&gt;\n  mutate(percentage = (count / sum(count)) * 100)\n\nggplot(gender_age_percentages, aes(x = percentage, y = age_group, fill = gender)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.7) +\n  labs(title = \"Gender Participation by Age Group\",\n       x = \"Percentage of Participants (%)\",\n       y = \"Age Group\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nObservations: In the youngest age group of 18-29, women make up a majority of participants which is somewhat surprising and inspiring! Men take the majority in the other age brackets but maybe we’ll see this change as those younger women continue their run journey’s into later ages!",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#spaghett-out-of-italys-way",
    "href": "results.html#spaghett-out-of-italys-way",
    "title": "3  Results",
    "section": "3.3 Spaghett out of Italy’s Way!",
    "text": "3.3 Spaghett out of Italy’s Way!\n\n\nCode\nmarathon_data_filter_us &lt;- marathon_data_clean |&gt;\n  filter(countryCode != \"USA\") |&gt;\n  group_by(countryCode) |&gt;\n  summarise(participant_count = n()) |&gt;\n  arrange(desc(participant_count)) |&gt;\n  top_n(10, participant_count)\n\nggplot(marathon_data_filter_us, aes(x= reorder(countryCode, -participant_count), y = participant_count)) +\n  geom_bar(stat = \"identity\", fill = \"purple\") +\n  geom_text(aes(label = participant_count), vjust = -0.3, size = 3) +\n  labs(x=\"Country\", y= \"Participant Count\", title = \" Participants by Country (Excluding USA)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nObservation: There are participants from 136 countries, covering all continents. Excluding the US since it’s the host country, we can see that a majority of runners come from Europe and the Americas with Italy topping the list with 2,345 runners! Do these countries produce winners with the fastest times?",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#speed-kings-of-ethoipia",
    "href": "results.html#speed-kings-of-ethoipia",
    "title": "3  Results",
    "section": "3.4 Speed Kings of Ethoipia",
    "text": "3.4 Speed Kings of Ethoipia\n\n\nCode\nlibrary(lubridate)\n\n# Convert 'overallTime' to seconds for calculations\nmarathon_data_clean &lt;- marathon_data_clean |&gt;\n  filter(!is.na(overallTime)) |&gt;\n  mutate(overallTime = hms(overallTime),   # Parse to 'Period' object\n         overallTimeSec = as.numeric(overallTime),\n         countryCode = if_else(countryCode == \"Sai\", \"SAI\", countryCode))  # Convert to seconds\n\n# Calculate average finish time by country (in seconds), filter for top 20\ncountry_avg_time &lt;- marathon_data_clean |&gt;\n  group_by(countryCode) |&gt;\n  arrange(desc(overallTimeSec)) |&gt;\n  summarise(avg_time_sec = mean(overallTimeSec, na.rm = TRUE)) |&gt;\n  arrange(avg_time_sec) |&gt;\n  head(10) |&gt;\n  mutate(avg_time_hours = avg_time_sec / 3600)\n\n# Plot average finish times in hours\nggplot(country_avg_time, aes(x = avg_time_hours, y = reorder(countryCode, avg_time_hours))) +\n  geom_point(size = 4, color = \"steelblue\") +  \n  geom_segment(aes(xend = 1, yend = countryCode), color = \"gray\") +  \n  geom_text(aes(label= paste(round(avg_time_hours,2),\"hrs\")), vjust = .5, hjust = -0.1, color = 'darkblue') +\n  labs(title = \"Fastest Countries by Average Finish Time\",\n       x = \"Average Finish Time (hours)\",\n       y = \"Country\") +\n  scale_x_continuous(breaks = seq(1, max(country_avg_time$avg_time_hours), by = 0.5),\n                     limits = c(1, max(country_avg_time$avg_time_hours))) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 8))  \n\n\n\n\n\n\n\n\n\nObservations: We calculated the average finish time per country and plotted the 10 fastest here. It’s interesting that the countries with the most participants aren’t in the list of top 10 fastest countries - this could suggest that runners in the more represented countries complete marathons as recreational or amateur athletes whereas runners from Ethiopia potentially take the sport more serious.\n\n\nCode\ngender_clean &lt;- gender_clean |&gt;\n  filter(!is.na(overallTime)) |&gt;\n  mutate(overallTime = hms(overallTime),   # Parse to 'Period' object\n         overallTimeSec = as.numeric(overallTime))\n\ngender_age_avg_time &lt;- gender_clean |&gt;\n  group_by(gender, age_group) |&gt;\n  summarise(avg_time_sec = mean(overallTimeSec, na.rm = TRUE)) |&gt;\n  mutate(avg_time_hours = avg_time_sec / 3600)\n\nggplot(gender_age_avg_time, aes(x = age_group, y = avg_time_hours, color = gender, group = gender)) +\n  geom_point(size = 4) +  # Plot points\n  geom_line() +  # Connect points with lines\n  geom_text(aes(label = round(avg_time_hours, 2)), vjust = -0.5, color = 'black') +  # Add labels for average times\n  labs(title = \"Fastest Age Group by Gender\",\n       x = \"Age Group\",\n       y = \"Average Finish Time (hours)\",\n       color = \"Gender\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nObservations:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#the-age-groups-that-leave-everyone-in-the-dust",
    "href": "results.html#the-age-groups-that-leave-everyone-in-the-dust",
    "title": "3  Results",
    "section": "3.5 The Age Groups that Leave Everyone in the Dust",
    "text": "3.5 The Age Groups that Leave Everyone in the Dust\n\n\nCode\ngender_clean &lt;- gender_clean |&gt;\n  mutate(overallTimeSec = as.numeric(hms(overallTime))) |&gt;\n  mutate(avg_time_hours = overallTimeSec / 3600)\n\nggplot(gender_clean, aes(x = interaction(age_group, gender), y = avg_time_hours, fill = gender)) +\n  geom_boxplot() +\n  scale_y_continuous(labels = scales::comma) +\n  labs(title = \"Finish Times by Age Group and Gender\",\n       x = \"Age Group and Gender\",\n       y = \"Finish Time (hours)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  stat_summary(fun = \"median\",\n               geom = \"text\",\n               aes(label = round(..y.., 2)),\n               color = \"black\",\n               hjust = 0.4,\n               vjust = -0.5)\n\n\n\n\n\n\n\n\n\nObservations: (feel like we should change this to minutes or hours)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#waves-of-speed-how-age-shapes-the-run-time-landscape",
    "href": "results.html#waves-of-speed-how-age-shapes-the-run-time-landscape",
    "title": "3  Results",
    "section": "3.6 Waves of Speed: How Age Shapes the Run Time Landscape",
    "text": "3.6 Waves of Speed: How Age Shapes the Run Time Landscape\n\n\nCode\nlibrary(ggridges)\n\ngender_clean &lt;- gender_clean |&gt;\n  mutate(overallTimeSec = as.numeric(hms(overallTime)),\n         avg_time_hours = overallTimeSec / 3600)\n\n# Ridgeline density plot for finish times by age group\nggplot(gender_clean, aes(x = avg_time_hours, y = age_group)) +\n  geom_density_ridges(fill = \"yellow\", alpha = 0.6) +   # Ridges for density plot\n  scale_x_continuous(labels = scales::comma) +  # Format x-axis with commas\n  labs(title = \"Distribution of Finish Times by Age Group\",\n       x = \"Finish Time (hours)\",\n       y = \"Age Group\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 8),\n        axis.text.x = element_text(size = 10))\n\n\n\n\n\n\n\n\n\nObservation: There’s a slight shift in median finish times as we progress through the age groups but a peak remains present around 3.5 hours across all age groups, some just have sharper peaks. The ridges get wider as the runners get older indicating a larger spread of finish times in those groups. Most of the ridges are right-skewed showing that most participants across the different age groups finish faster than they do slower.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#more-races-faster-paces",
    "href": "results.html#more-races-faster-paces",
    "title": "3  Results",
    "section": "3.7 More Races, Faster Paces?",
    "text": "3.7 More Races, Faster Paces?\n\n\nCode\ngender_clean &lt;- gender_clean |&gt;\n  mutate(overallTimeSec = as.numeric(hms(overallTime)),\n         avg_time_hours = overallTimeSec / 3600)\n\nggplot(gender_clean, aes(x = racesCount, y = avg_time_hours)) +\n  geom_point(alpha = 0.3, size=0.5, color = \"steelblue\") +  \n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +   # Regression line\n  facet_wrap(~ age_group, scales = \"free\") +\n  labs(title = \"Correlation between Race Count and Finish Time\",\n       x = \"Number of Races Completed\",\n       y = \"Finish Time (hours)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nObservations: Interestingly, by plotting the regression line we can see that there really isn’t a correlation between races completed and finish time until the older age groups. Runners 50 years of age and older show a positive correlation between number of races completed and their finish times for the 2024 NYC marathon.\nThis is good news since Sara has literally 0 races under her belt and Andrea has…1? We both still have a fighting chance!\nQuestion 8:\n\n\nCode\nmarathon_data_clean &lt;- marathon_data_clean %&gt;%\n  mutate(age_group = case_when(\n    age &gt;= 18 & age &lt;= 29 ~ \"18-29\",\n    age &gt;= 30 & age &lt;= 39 ~ \"30-39\",\n    age &gt;= 40 & age &lt;= 49 ~ \"40-49\",\n    age &gt;= 50 & age &lt;= 59 ~ \"50-59\",\n    age &gt;= 60 ~ \"60+\",\n    TRUE ~ \"Other\"\n  ))\n\nmarathon_data_clean &lt;- marathon_data_clean %&gt;%\n  mutate(overallTimeHours = overallTimeSec %/% 3600,  \n         overallTimeMinutes = (overallTimeSec %% 3600) %/% 60)  \n\nmarathon_data_clean &lt;- marathon_data_clean %&gt;%\n  mutate(overallTimeHM = paste(overallTimeHours, sprintf(\"%02d\", overallTimeMinutes), sep = \":\"))\n\nage_group_18_29 &lt;- marathon_data_clean %&gt;%\n  filter(age_group == \"18-29\")\n\nggplot(age_group_18_29, aes(x = overallTimeSec)) +\n  geom_density(fill = \"lightpink\", color = \"red\", alpha = 0.6) +\n  scale_x_continuous(\n    labels = function(x) {\n      # Convert seconds into hours:minutes format\n      hours &lt;- x %/% 3600\n      minutes &lt;- (x %% 3600) %/% 60\n      seconds &lt;- x %% 60\n      paste0(hours, \"h \", minutes, \"m\")\n    }\n  ) +\n  labs(title = \"Density of Overall Time (Hours:Minutes) for Age Group 18-29\",\n       x = \"Overall Time (Hours:Minutes)\",\n       y = \"Density\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nObservations:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "5.1 Future Analysis\nTo hone in on some of these thoughts for further exploration, we could look for data that contains registration times to see if missing values were concentrated among participants who registered late or early.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  }
]